{
  "address": "0x73AaDec9511682b1666345a51056900993D5cb8f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_Bash",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_DAI",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_secondsNeededForQueue",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum BashTreasury.MANAGING",
          "name": "managing",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "activated",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "ChangeActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum BashTreasury.MANAGING",
          "name": "managing",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "queued",
          "type": "address"
        }
      ],
      "name": "ChangeQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CreateDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RepayDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReservesManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Bash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "LiquidityDepositorQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "LiquidityManagerQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "LiquidityTokenQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ReserveManagerQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auditReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bondCalculator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtorQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "debtors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "send_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excessReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "incurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDebtor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLiquidityDepositor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLiquidityManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLiquidityToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveDepositor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveSpender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRewardManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidityDepositors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidityManagers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidityTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "manage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum BashTreasury.MANAGING",
          "name": "_managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayDebtWithBash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "repayDebtWithReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveDepositorQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveDepositors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveManagers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveSpenderQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveSpenders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveTokenQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardManagerQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardManagers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sBash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sBashQueue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsNeededForQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum BashTreasury.MANAGING",
          "name": "_managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_calculator",
          "type": "address"
        }
      ],
      "name": "toggle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "tokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9a31209c9c74e3fcd1e3b2e5c30bb7e9ce91237d6500325d4c50d928bcb3ca5",
  "receipt": {
    "to": null,
    "from": "0x02c368c0787BB33ACAc698049CcA2454B5cC96c5",
    "contractAddress": "0x73AaDec9511682b1666345a51056900993D5cb8f",
    "transactionIndex": 6,
    "gasUsed": "3263039",
    "logsBloom": "0x
    "blockHash": "0x5a7e6d8c9698f6e889c6ddbe2c5932f2b80057a7d4f36daa705d5694d0049312",
    "transactionHash": "0xb9a31209c9c74e3fcd1e3b2e5c30bb7e9ce91237d6500325d4c50d928bcb3ca5",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 10922181,
        "transactionHash": "0xb9a31209c9c74e3fcd1e3b2e5c30bb7e9ce91237d6500325d4c50d928bcb3ca5",
        "address": "0x73AaDec9511682b1666345a51056900993D5cb8f",
        "topics": [
          "0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000002c368c0787bb33acac698049cca2454b5cc96c5"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0x5a7e6d8c9698f6e889c6ddbe2c5932f2b80057a7d4f36daa705d5694d0049312"
      }
    ],
    "blockNumber": 10922181,
    "cumulativeGasUsed": "4089152",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf7A1D14EC3a45dA9bde66E6b91e68aDc32fa4498",
    "0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735",
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "b6e2c075d0000f2011c9e6a54f10b6ba",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Bash\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DAI\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_secondsNeededForQueue\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum BashTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"activated\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"ChangeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum BashTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queued\",\"type\":\"address\"}],\"name\":\"ChangeQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RepayDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReservesManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Bash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityDepositorQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityManagerQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityTokenQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ReserveManagerQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondCalculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"debtors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"incurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDebtor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveSpender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRewardManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityDepositors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"manage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BashTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayDebtWithBash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"repayDebtWithReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveDepositorQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveDepositors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveSpenderQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveSpenders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveTokenQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardManagerQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sBash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sBashQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsNeededForQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BashTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"}],\"name\":\"toggle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_profit\":\"uint\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint\"}},\"excessReserves()\":{\"returns\":{\"_0\":\"uint\"}},\"incurDebt(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"manage(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"queue(uint8,address)\":{\"params\":{\"_address\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"repayDebtWithBash(uint256)\":{\"params\":{\"_amount\":\"uint\"}},\"repayDebtWithReserve(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"toggle(uint8,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"tokenValue(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint\"}},\"withdraw(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"auditReserves()\":{\"notice\":\"takes inventory of all tracked assetsalways consolidate to recognized reserves before audit\"},\"deposit(uint256,address,uint256)\":{\"notice\":\"allow approved address to deposit an asset for bash\"},\"excessReserves()\":{\"notice\":\"returns excess reserves not backing tokens\"},\"incurDebt(uint256,address)\":{\"notice\":\"allow approved address to borrow reserves\"},\"manage(address,uint256)\":{\"notice\":\"allow approved address to withdraw assets\"},\"mintRewards(address,uint256)\":{\"notice\":\"send epoch reward to staking contract\"},\"queue(uint8,address)\":{\"notice\":\"queue address to change boolean in mapping\"},\"repayDebtWithBash(uint256)\":{\"notice\":\"allow approved address to repay borrowed reserves with bash\"},\"repayDebtWithReserve(uint256,address)\":{\"notice\":\"allow approved address to repay borrowed reserves with reserves\"},\"toggle(uint8,address,address)\":{\"notice\":\"verify queue then set boolean in mapping\"},\"tokenValue(address,uint256)\":{\"notice\":\"returns BASH valuation of asset\"},\"withdraw(uint256,address)\":{\"notice\":\"allow approved address to burn bash for reserves\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"BashTreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Treasury.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at snowtrace.io on 2021-11-05\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.7.5;\\r\\n\\r\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\r\\nimport {ITreasury} from \\\"./interfaces/ITreasury.sol\\\";\\r\\nimport {IERC20Burnable, IERC20Mintable} from \\\"./interfaces/IBash.sol\\\";\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function add32(uint32 a, uint32 b) internal pure returns (uint32) {\\r\\n        uint32 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul32(uint32 a, uint32 b) internal pure returns (uint32) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint32 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary Address {\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies in extcodesize, which returns 0 for contracts in\\r\\n        // construction, since the code is only stored at the end of the\\r\\n        // constructor execution.\\r\\n\\r\\n        uint256 size;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            size := extcodesize(account)\\r\\n        }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 weiValue,\\r\\n        string memory errorMessage\\r\\n    ) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\\r\\n            data\\r\\n        );\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            if (returndata.length > 0) {\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) private pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            if (returndata.length > 0) {\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IOwnable {\\r\\n    function manager() external view returns (address);\\r\\n\\r\\n    function renounceManagement() external;\\r\\n\\r\\n    function pushManagement(address newOwner_) external;\\r\\n\\r\\n    function pullManagement() external;\\r\\n}\\r\\n\\r\\ncontract Ownable is IOwnable {\\r\\n    address internal _owner;\\r\\n    address internal _newOwner;\\r\\n\\r\\n    event OwnershipPushed(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n    event OwnershipPulled(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        _owner = msg.sender;\\r\\n        emit OwnershipPushed(address(0), _owner);\\r\\n    }\\r\\n\\r\\n    function manager() public view override returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyManager() {\\r\\n        require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceManagement() public virtual override onlyManager {\\r\\n        emit OwnershipPushed(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function pushManagement(address newOwner_)\\r\\n        public\\r\\n        virtual\\r\\n        override\\r\\n        onlyManager\\r\\n    {\\r\\n        require(\\r\\n            newOwner_ != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipPushed(_owner, newOwner_);\\r\\n        _newOwner = newOwner_;\\r\\n    }\\r\\n\\r\\n    function pullManagement() public virtual override {\\r\\n        require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\r\\n        emit OwnershipPulled(_owner, _newOwner);\\r\\n        _owner = _newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n// interface IERC20 {\\r\\n//     function decimals() external view returns (uint8);\\r\\n\\r\\n//     function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n//     function transfer(address recipient, uint256 amount)\\r\\n//         external\\r\\n//         returns (bool);\\r\\n\\r\\n//     function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n//     function totalSupply() external view returns (uint256);\\r\\n\\r\\n//     function transferFrom(\\r\\n//         address sender,\\r\\n//         address recipient,\\r\\n//         uint256 amount\\r\\n//     ) external returns (bool);\\r\\n\\r\\n//     event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n//     event Approval(\\r\\n//         address indexed owner,\\r\\n//         address indexed spender,\\r\\n//         uint256 value\\r\\n//     );\\r\\n// }\\r\\n\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(\\r\\n        IERC20 token,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        bytes memory returndata = address(token).functionCall(\\r\\n            data,\\r\\n            \\\"SafeERC20: low-level call failed\\\"\\r\\n        );\\r\\n        if (returndata.length > 0) {\\r\\n            // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(\\r\\n                abi.decode(returndata, (bool)),\\r\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IBondCalculator {\\r\\n    function valuation(address pair_, uint256 amount_)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 _value);\\r\\n}\\r\\n\\r\\ncontract BashTreasury is Ownable, ITreasury {\\r\\n    using SafeMath for uint256;\\r\\n    using SafeMath for uint32;\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    event Deposit(address indexed token, uint256 amount, uint256 value);\\r\\n    event Withdrawal(address indexed token, uint256 amount, uint256 value);\\r\\n    event CreateDebt(\\r\\n        address indexed debtor,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 value\\r\\n    );\\r\\n    event RepayDebt(\\r\\n        address indexed debtor,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 value\\r\\n    );\\r\\n    event ReservesManaged(address indexed token, uint256 amount);\\r\\n    event ReservesUpdated(uint256 indexed totalReserves);\\r\\n    event ReservesAudited(uint256 indexed totalReserves);\\r\\n    event RewardsMinted(\\r\\n        address indexed caller,\\r\\n        address indexed recipient,\\r\\n        uint256 amount\\r\\n    );\\r\\n    event ChangeQueued(MANAGING indexed managing, address queued);\\r\\n    event ChangeActivated(\\r\\n        MANAGING indexed managing,\\r\\n        address activated,\\r\\n        bool result\\r\\n    );\\r\\n\\r\\n    enum MANAGING {\\r\\n        RESERVEDEPOSITOR,\\r\\n        RESERVESPENDER,\\r\\n        RESERVETOKEN,\\r\\n        RESERVEMANAGER,\\r\\n        LIQUIDITYDEPOSITOR,\\r\\n        LIQUIDITYTOKEN,\\r\\n        LIQUIDITYMANAGER,\\r\\n        DEBTOR,\\r\\n        REWARDMANAGER,\\r\\n        SBASH\\r\\n    }\\r\\n\\r\\n    address public immutable Bash;\\r\\n    uint32 public immutable secondsNeededForQueue;\\r\\n\\r\\n    address[] public reserveTokens; // Push only, beware false-positives.\\r\\n    mapping(address => bool) public isReserveToken;\\r\\n    mapping(address => uint32) public reserveTokenQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isReserveDepositor;\\r\\n    mapping(address => uint32) public reserveDepositorQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isReserveSpender;\\r\\n    mapping(address => uint32) public reserveSpenderQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public liquidityTokens; // Push only, beware false-positives.\\r\\n    mapping(address => bool) public isLiquidityToken;\\r\\n    mapping(address => uint32) public LiquidityTokenQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isLiquidityDepositor;\\r\\n    mapping(address => uint32) public LiquidityDepositorQueue; // Delays changes to mapping.\\r\\n\\r\\n    mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\r\\n\\r\\n    address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isReserveManager;\\r\\n    mapping(address => uint32) public ReserveManagerQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isLiquidityManager;\\r\\n    mapping(address => uint32) public LiquidityManagerQueue; // Delays changes to mapping.\\r\\n\\r\\n    address[] public debtors; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isDebtor;\\r\\n    mapping(address => uint32) public debtorQueue; // Delays changes to mapping.\\r\\n    mapping(address => uint256) public debtorBalance;\\r\\n\\r\\n    address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\r\\n    mapping(address => bool) public isRewardManager;\\r\\n    mapping(address => uint32) public rewardManagerQueue; // Delays changes to mapping.\\r\\n\\r\\n    address public sBash;\\r\\n    uint256 public sBashQueue; // Delays change to sbash address\\r\\n\\r\\n    uint256 public totalReserves; // Risk-free value of all assets\\r\\n    uint256 public totalDebt;\\r\\n\\r\\n    constructor(\\r\\n        address _Bash, \\r\\n        address _DAI, // stable\\r\\n        uint32 _secondsNeededForQueue\\r\\n    ) {\\r\\n        require(_Bash != address(0));\\r\\n        Bash = _Bash;\\r\\n\\r\\n        isReserveToken[_DAI] = true;\\r\\n        reserveTokens.push(_DAI);\\r\\n\\r\\n        secondsNeededForQueue = _secondsNeededForQueue;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to deposit an asset for bash\\r\\n        @param _amount uint\\r\\n        @param _token address\\r\\n        @param _profit uint\\r\\n        @return send_ uint\\r\\n     */\\r\\n    function deposit(\\r\\n        uint256 _amount,\\r\\n        address _token,\\r\\n        uint256 _profit\\r\\n    ) external override returns (uint256 send_) {\\r\\n        require(\\r\\n            isReserveToken[_token] || isLiquidityToken[_token],\\r\\n            \\\"Not accepted\\\"\\r\\n        );\\r\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\r\\n\\r\\n        if (isReserveToken[_token]) {\\r\\n            require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\r\\n        } else {\\r\\n            require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\r\\n        }\\r\\n\\r\\n        uint256 value = tokenValue(_token, _amount); // value of token in BASH\\r\\n        // mint BASH needed and store amount of rewards for distribution\\r\\n        send_ = value.sub(_profit);\\r\\n        IERC20Mintable(Bash).mint(msg.sender, send_);\\r\\n\\r\\n        totalReserves = totalReserves.add(value);\\r\\n        emit ReservesUpdated(totalReserves);\\r\\n\\r\\n        emit Deposit(_token, _amount, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to burn bash for reserves\\r\\n        @param _amount uint\\r\\n        @param _token address\\r\\n     */\\r\\n    function withdraw(uint256 _amount, address _token) external {\\r\\n        require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\r\\n        require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\r\\n\\r\\n        uint256 value = tokenValue(_token, _amount);\\r\\n        IERC20Burnable(Bash).burnFrom(msg.sender, value);\\r\\n\\r\\n        totalReserves = totalReserves.sub(value);\\r\\n        emit ReservesUpdated(totalReserves);\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\r\\n\\r\\n        emit Withdrawal(_token, _amount, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to borrow reserves\\r\\n        @param _amount uint\\r\\n        @param _token address\\r\\n     */\\r\\n    function incurDebt(uint256 _amount, address _token) external {\\r\\n        require(isDebtor[msg.sender], \\\"Not approved\\\");\\r\\n        require(isReserveToken[_token], \\\"Not accepted\\\");\\r\\n\\r\\n        uint256 value = tokenValue(_token, _amount);\\r\\n\\r\\n        uint256 maximumDebt = IERC20(sBash).balanceOf(msg.sender); // Can only borrow against sbash held\\r\\n        uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\r\\n        require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\r\\n\\r\\n        debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\r\\n        totalDebt = totalDebt.add(value);\\r\\n\\r\\n        totalReserves = totalReserves.sub(value);\\r\\n        emit ReservesUpdated(totalReserves);\\r\\n\\r\\n        IERC20(_token).transfer(msg.sender, _amount);\\r\\n\\r\\n        emit CreateDebt(msg.sender, _token, _amount, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to repay borrowed reserves with reserves\\r\\n        @param _amount uint\\r\\n        @param _token address\\r\\n     */\\r\\n    function repayDebtWithReserve(uint256 _amount, address _token) external {\\r\\n        require(isDebtor[msg.sender], \\\"Not approved\\\");\\r\\n        require(isReserveToken[_token], \\\"Not accepted\\\");\\r\\n\\r\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\r\\n\\r\\n        uint256 value = tokenValue(_token, _amount);\\r\\n        debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\r\\n        totalDebt = totalDebt.sub(value);\\r\\n\\r\\n        totalReserves = totalReserves.add(value);\\r\\n        emit ReservesUpdated(totalReserves);\\r\\n\\r\\n        emit RepayDebt(msg.sender, _token, _amount, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to repay borrowed reserves with bash\\r\\n        @param _amount uint\\r\\n     */\\r\\n    function repayDebtWithBash(uint256 _amount) external {\\r\\n        require(isDebtor[msg.sender], \\\"Not approved\\\");\\r\\n\\r\\n        IERC20Burnable(Bash).burnFrom(msg.sender, _amount);\\r\\n\\r\\n        debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\r\\n        totalDebt = totalDebt.sub(_amount);\\r\\n\\r\\n        emit RepayDebt(msg.sender, Bash, _amount, _amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice allow approved address to withdraw assets\\r\\n        @param _token address\\r\\n        @param _amount uint\\r\\n     */\\r\\n    function manage(address _token, uint256 _amount) external {\\r\\n        if (isLiquidityToken[_token]) {\\r\\n            require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\r\\n        } else {\\r\\n            require(isReserveManager[msg.sender], \\\"Not approved\\\");\\r\\n        }\\r\\n\\r\\n        uint256 value = tokenValue(_token, _amount);\\r\\n        require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\r\\n\\r\\n        totalReserves = totalReserves.sub(value);\\r\\n        emit ReservesUpdated(totalReserves);\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\r\\n\\r\\n        emit ReservesManaged(_token, _amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice send epoch reward to staking contract\\r\\n     */\\r\\n    function mintRewards(address _recipient, uint256 _amount) override external {\\r\\n        require(isRewardManager[msg.sender], \\\"Not approved\\\");\\r\\n        require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\r\\n\\r\\n        IERC20Mintable(Bash).mint(_recipient, _amount);\\r\\n\\r\\n        emit RewardsMinted(msg.sender, _recipient, _amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice returns excess reserves not backing tokens\\r\\n        @return uint\\r\\n     */\\r\\n    function excessReserves() public view returns (uint256) {\\r\\n        return totalReserves.sub(IERC20(Bash).totalSupply().sub(totalDebt));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice takes inventory of all tracked assets\\r\\n        @notice always consolidate to recognized reserves before audit\\r\\n     */\\r\\n    function auditReserves() external onlyManager {\\r\\n        uint256 reserves;\\r\\n        for (uint256 i = 0; i < reserveTokens.length; i++) {\\r\\n            reserves = reserves.add(\\r\\n                tokenValue(\\r\\n                    reserveTokens[i],\\r\\n                    IERC20(reserveTokens[i]).balanceOf(address(this))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < liquidityTokens.length; i++) {\\r\\n            reserves = reserves.add(\\r\\n                tokenValue(\\r\\n                    liquidityTokens[i],\\r\\n                    IERC20(liquidityTokens[i]).balanceOf(address(this))\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        totalReserves = reserves;\\r\\n        emit ReservesUpdated(reserves);\\r\\n        emit ReservesAudited(reserves);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice returns BASH valuation of asset\\r\\n        @param _token address\\r\\n        @param _amount uint\\r\\n        @return value_ uint\\r\\n     */\\r\\n    function tokenValue(address _token, uint256 _amount)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (uint256 value_)\\r\\n    {\\r\\n        if (isReserveToken[_token]) {\\r\\n            // convert amount to match Bash decimals\\r\\n            value_ = _amount.mul(10**IERC20(Bash).decimals()).div(\\r\\n                10**IERC20(_token).decimals()\\r\\n            );\\r\\n        } else if (isLiquidityToken[_token]) {\\r\\n            value_ = IBondCalculator(bondCalculator[_token]).valuation(\\r\\n                _token,\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // function tokenValue(address _token, uint256 _amount) public view override returns (uint256 value_)\\r\\n    // {\\r\\n    //     if (isReserveToken[_token]) {\\r\\n    //         // convert amount to match Bash decimals\\r\\n    //         value_ = _amount.mul(10**IERC20(Bash).decimals()).div(\\r\\n    //             10**IERC20(_token).decimals()\\r\\n    //         );\\r\\n    //     } else if (isLiquidityToken[_token]) {\\r\\n    //         value_ = IBondCalculator(bondCalculator[_token]).valuation(\\r\\n    //             _token,\\r\\n    //             _amount\\r\\n    //         );\\r\\n    //     }\\r\\n    // }\\r\\n\\r\\n\\r\\n    /**\\r\\n        @notice queue address to change boolean in mapping\\r\\n        @param _managing MANAGING\\r\\n        @param _address address\\r\\n        @return bool\\r\\n     */\\r\\n    function queue(MANAGING _managing, address _address)\\r\\n        external\\r\\n        onlyManager\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(_address != address(0));\\r\\n        if (_managing == MANAGING.RESERVEDEPOSITOR) {\\r\\n            // 0\\r\\n            reserveDepositorQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.RESERVESPENDER) {\\r\\n            // 1\\r\\n            reserveSpenderQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.RESERVETOKEN) {\\r\\n            // 2\\r\\n            reserveTokenQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.RESERVEMANAGER) {\\r\\n            // 3\\r\\n            ReserveManagerQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue.mul32(2)\\r\\n            );\\r\\n        } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\r\\n            // 4\\r\\n            LiquidityDepositorQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\r\\n            // 5\\r\\n            LiquidityTokenQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\r\\n            // 6\\r\\n            LiquidityManagerQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue.mul32(2)\\r\\n            );\\r\\n        } else if (_managing == MANAGING.DEBTOR) {\\r\\n            // 7\\r\\n            debtorQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.REWARDMANAGER) {\\r\\n            // 8\\r\\n            rewardManagerQueue[_address] = uint32(block.timestamp).add32(\\r\\n                secondsNeededForQueue\\r\\n            );\\r\\n        } else if (_managing == MANAGING.SBASH) {\\r\\n            // 9\\r\\n            sBashQueue = uint32(block.timestamp).add32(secondsNeededForQueue);\\r\\n        } else return false;\\r\\n\\r\\n        emit ChangeQueued(_managing, _address);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice verify queue then set boolean in mapping\\r\\n        @param _managing MANAGING\\r\\n        @param _address address\\r\\n        @param _calculator address\\r\\n        @return bool\\r\\n     */\\r\\n    function toggle(\\r\\n        MANAGING _managing,\\r\\n        address _address,\\r\\n        address _calculator\\r\\n    ) external onlyManager returns (bool) {\\r\\n        require(_address != address(0));\\r\\n        bool result;\\r\\n        if (_managing == MANAGING.RESERVEDEPOSITOR) {\\r\\n            // 0\\r\\n            if (\\r\\n                requirements(\\r\\n                    reserveDepositorQueue,\\r\\n                    isReserveDepositor,\\r\\n                    _address\\r\\n                )\\r\\n            ) {\\r\\n                reserveDepositorQueue[_address] = 0;\\r\\n                if (!listContains(reserveDepositors, _address)) {\\r\\n                    reserveDepositors.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isReserveDepositor[_address];\\r\\n            isReserveDepositor[_address] = result;\\r\\n        } else if (_managing == MANAGING.RESERVESPENDER) {\\r\\n            // 1\\r\\n            if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\r\\n                reserveSpenderQueue[_address] = 0;\\r\\n                if (!listContains(reserveSpenders, _address)) {\\r\\n                    reserveSpenders.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isReserveSpender[_address];\\r\\n            isReserveSpender[_address] = result;\\r\\n        } else if (_managing == MANAGING.RESERVETOKEN) {\\r\\n            // 2\\r\\n            if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\r\\n                reserveTokenQueue[_address] = 0;\\r\\n                if (!listContains(reserveTokens, _address)) {\\r\\n                    reserveTokens.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isReserveToken[_address];\\r\\n            isReserveToken[_address] = result;\\r\\n        } else if (_managing == MANAGING.RESERVEMANAGER) {\\r\\n            // 3\\r\\n            if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\r\\n                reserveManagers.push(_address);\\r\\n                ReserveManagerQueue[_address] = 0;\\r\\n                if (!listContains(reserveManagers, _address)) {\\r\\n                    reserveManagers.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isReserveManager[_address];\\r\\n            isReserveManager[_address] = result;\\r\\n        } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\r\\n            // 4\\r\\n            if (\\r\\n                requirements(\\r\\n                    LiquidityDepositorQueue,\\r\\n                    isLiquidityDepositor,\\r\\n                    _address\\r\\n                )\\r\\n            ) {\\r\\n                liquidityDepositors.push(_address);\\r\\n                LiquidityDepositorQueue[_address] = 0;\\r\\n                if (!listContains(liquidityDepositors, _address)) {\\r\\n                    liquidityDepositors.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isLiquidityDepositor[_address];\\r\\n            isLiquidityDepositor[_address] = result;\\r\\n        } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\r\\n            // 5\\r\\n            if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\r\\n                LiquidityTokenQueue[_address] = 0;\\r\\n                if (!listContains(liquidityTokens, _address)) {\\r\\n                    liquidityTokens.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isLiquidityToken[_address];\\r\\n            isLiquidityToken[_address] = result;\\r\\n            bondCalculator[_address] = _calculator;\\r\\n        } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\r\\n            // 6\\r\\n            if (\\r\\n                requirements(\\r\\n                    LiquidityManagerQueue,\\r\\n                    isLiquidityManager,\\r\\n                    _address\\r\\n                )\\r\\n            ) {\\r\\n                LiquidityManagerQueue[_address] = 0;\\r\\n                if (!listContains(liquidityManagers, _address)) {\\r\\n                    liquidityManagers.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isLiquidityManager[_address];\\r\\n            isLiquidityManager[_address] = result;\\r\\n        } else if (_managing == MANAGING.DEBTOR) {\\r\\n            // 7\\r\\n            if (requirements(debtorQueue, isDebtor, _address)) {\\r\\n                debtorQueue[_address] = 0;\\r\\n                if (!listContains(debtors, _address)) {\\r\\n                    debtors.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isDebtor[_address];\\r\\n            isDebtor[_address] = result;\\r\\n        } else if (_managing == MANAGING.REWARDMANAGER) {\\r\\n            // 8\\r\\n            if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\r\\n                rewardManagerQueue[_address] = 0;\\r\\n                if (!listContains(rewardManagers, _address)) {\\r\\n                    rewardManagers.push(_address);\\r\\n                }\\r\\n            }\\r\\n            result = !isRewardManager[_address];\\r\\n            isRewardManager[_address] = result;\\r\\n        } else if (_managing == MANAGING.SBASH) {\\r\\n            // 9\\r\\n            sBashQueue = 0;\\r\\n            sBash = _address;\\r\\n            result = true;\\r\\n        } else return false;\\r\\n\\r\\n        emit ChangeActivated(_managing, _address, result);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice checks requirements and returns altered structs\\r\\n        @param queue_ mapping( address => uint )\\r\\n        @param status_ mapping( address => bool )\\r\\n        @param _address address\\r\\n        @return bool \\r\\n     */\\r\\n    function requirements(\\r\\n        mapping(address => uint32) storage queue_,\\r\\n        mapping(address => bool) storage status_,\\r\\n        address _address\\r\\n    ) internal view returns (bool) {\\r\\n        if (!status_[_address]) {\\r\\n            require(queue_[_address] != 0, \\\"Must queue\\\");\\r\\n            require(\\r\\n                queue_[_address] <= uint32(block.timestamp),\\r\\n                \\\"Queue not expired\\\"\\r\\n            );\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice checks array to ensure against duplicate\\r\\n        @param _list address[]\\r\\n        @param _token address\\r\\n        @return bool\\r\\n     */\\r\\n    function listContains(address[] storage _list, address _token)\\r\\n        internal\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        for (uint256 i = 0; i < _list.length; i++) {\\r\\n            if (_list[i] == _token) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9fb6304899f9a17fc9be8bc30b69e9e67d2551e4116deb79750a242b14d93806\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/IBash.sol\":{\"content\":\"\\r\\n// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.7.5;\\r\\n\\r\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\r\\n\\r\\ninterface IERC20Mintable {\\r\\n    function mint(uint256 amount_) external;\\r\\n\\r\\n    function mint(address account_, uint256 ammount_) external;\\r\\n}\\r\\n\\r\\ninterface IERC20Burnable {\\r\\n    function burnFrom(address account_, uint256 amount_) external;\\r\\n}\\r\\n\\r\\ninterface IBash is IERC20, IERC20Mintable { }\",\"keccak256\":\"0x6b8e2ea0bf0fe7aabe1930b288eb7fdf7af91659c8591e986c8d695ebf60faf5\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.7.5;\\r\\n\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the decimals of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xd2dbf3d69a22df3aaa56a1a70285cfe9d4c180c4724a4c7b63a851c779733092\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity <=0.8.10;\\r\\n\\r\\ninterface ITreasury {\\r\\n    function tokenValue(address _token, uint256 _amount)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function deposit(\\r\\n        uint256 _amount,\\r\\n        address _token,\\r\\n        uint256 _profit\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function mintRewards(address _recipient, uint256 _amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x665b6502a4a30f8c06a950497d04febacc03437f0768698313d7c33ec48cb684\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405162003a1738038062003a178339818101604052606081101561003557600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b0383166100a057600080fd5b6001600160601b0319606084901b166080526001600160a01b039182166000818152600360205260408120805460ff1916600190811790915560028054918201815582527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319169092179091556001600160e01b031960e083901b1660a052919092169163ffffffff169061386e90620001a990398061196a5280611f765280611ff3528061207052806120ec528061217e52806121fb528061227752806122f9528061237652806123f3525080610a9e5280610e7e5280610f8f5280611043528061159a528061185f5280611bdd528061256a525061386e6000f3fe608060405234801561001057600080fd5b50600436106103405760003560e01c80638f59c727116101bd578063d796ffb8116100f9578063f13e7b01116100a2578063fbfd393b1161007c578063fbfd393b14610958578063fc7b9c181461098f578063fd1ec01014610997578063fff9ee87146109b457610340565b8063f13e7b01146108fe578063f182178314610906578063fb9395881461093257610340565b8063e83afee3116100d3578063e83afee314610883578063ebd83cd8146108b2578063ee4e19a1146108d857610340565b8063d796ffb814610829578063df89b34414610855578063e31736031461087b57610340565b8063ab319c9a11610166578063bc157ac111610140578063bc157ac11461078e578063c24ad43e146107c0578063cd85641a146107e6578063d031370b1461080c57610340565b8063ab319c9a14610725578063b1bd38b01461074b578063b5b1d5601461077157610340565b8063932cc8c311610197578063932cc8c3146106b3578063a1210a2d146106d9578063a569e571146106ff57610340565b80638f59c727146106685780638f6a7b571461068e5780638f840ddd146106ab57610340565b8063437f79121161028c5780636a20de9211610235578063788c6c011161020f578063788c6c01146105de5780637a8960d81461061d578063869871bf1461062557806387d67dff1461064257610340565b80636a20de92146105785780636b5e40a7146105a457806370a0502a146105c157610340565b80634e83423c116102665780634e83423c146105245780635a96ac0a1461054a57806368c31dd51461055257610340565b8063437f7912146104d957806346f68ee9146104f6578063481c6a751461051c57610340565b80631162eb10116102ee5780631af4da70116102c85780631af4da70146104a35780632b7ce500146104c95780633c4e6da7146104d157610340565b80631162eb1014610420578063124154ca1461043d57806312422d231461047757610340565b8063094a86511161031f578063094a8651146103b45780630b0eee30146103ec5780630c3513a81461041857610340565b8062f714ce146103455780630619aff114610373578063089208d8146103ac575b600080fd5b6103716004803603604081101561035b57600080fd5b50803590602001356001600160a01b03166109da565b005b6103906004803603602081101561038957600080fd5b5035610bc3565b604080516001600160a01b039092168252519081900360200190f35b610371610bed565b6103da600480360360208110156103ca57600080fd5b50356001600160a01b0316610c96565b60408051918252519081900360200190f35b6103716004803603604081101561040257600080fd5b506001600160a01b038135169060200135610ca8565b6103da610e71565b6103716004803603602081101561043657600080fd5b5035610f15565b6104636004803603602081101561045357600080fd5b50356001600160a01b0316611094565b604080519115158252519081900360200190f35b6103716004803603604081101561048d57600080fd5b50803590602001356001600160a01b03166110a9565b610390600480360360208110156104b957600080fd5b50356001600160a01b0316611396565b6103716113b1565b610390611598565b610390600480360360208110156104ef57600080fd5b50356115bc565b6103716004803603602081101561050c57600080fd5b50356001600160a01b03166115cc565b6103906116cb565b6104636004803603602081101561053a57600080fd5b50356001600160a01b03166116da565b6103716116ef565b6104636004803603602081101561056857600080fd5b50356001600160a01b0316611799565b6103716004803603604081101561058e57600080fd5b506001600160a01b0381351690602001356117ae565b610390600480360360208110156105ba57600080fd5b5035611930565b610390600480360360208110156105d757600080fd5b5035611940565b610604600480360360208110156105f457600080fd5b50356001600160a01b0316611950565b6040805163ffffffff9092168252519081900360200190f35b610604611968565b6103906004803603602081101561063b57600080fd5b503561198c565b6104636004803603602081101561065857600080fd5b50356001600160a01b031661199c565b6106046004803603602081101561067e57600080fd5b50356001600160a01b03166119b1565b610390600480360360208110156106a457600080fd5b50356119c9565b6103da6119d9565b610604600480360360208110156106c957600080fd5b50356001600160a01b03166119df565b610463600480360360208110156106ef57600080fd5b50356001600160a01b03166119f7565b6104636004803603602081101561071557600080fd5b50356001600160a01b0316611a0c565b6106046004803603602081101561073b57600080fd5b50356001600160a01b0316611a21565b6106046004803603602081101561076157600080fd5b50356001600160a01b0316611a39565b6103906004803603602081101561078757600080fd5b5035611a51565b6103da600480360360608110156107a457600080fd5b508035906001600160a01b036020820135169060400135611a61565b610604600480360360208110156107d657600080fd5b50356001600160a01b0316611cf1565b610604600480360360208110156107fc57600080fd5b50356001600160a01b0316611d09565b6103906004803603602081101561082257600080fd5b5035611d21565b6103716004803603604081101561083f57600080fd5b50803590602001356001600160a01b0316611d31565b6104636004803603602081101561086b57600080fd5b50356001600160a01b0316611ec6565b6103da611edb565b6104636004803603604081101561089957600080fd5b50803560ff1690602001356001600160a01b0316611ee1565b610463600480360360208110156108c857600080fd5b50356001600160a01b0316612481565b610463600480360360208110156108ee57600080fd5b50356001600160a01b0316612496565b6103906124ab565b6103da6004803603604081101561091c57600080fd5b506001600160a01b0381351690602001356124ba565b6106046004803603602081101561094857600080fd5b50356001600160a01b03166126ac565b6104636004803603606081101561096e57600080fd5b5060ff813516906001600160a01b03602082013581169160400135166126c4565b6103da612fec565b610390600480360360208110156109ad57600080fd5b5035612ff2565b610604600480360360208110156109ca57600080fd5b50356001600160a01b0316613002565b6001600160a01b03811660009081526003602052604090205460ff16610a36576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b3360009081526009602052604090205460ff161515600114610a8e576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000610a9a82846124ba565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379cc679033836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b5050602154610b39925090508261301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2610b7b6001600160a01b038316338561305c565b604080518481526020810183905281516001600160a01b038516927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb928290030190a2505050565b60128181548110610bd357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c4c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b601b6020526000908152604090205481565b6001600160a01b0382166000908152600c602052604090205460ff1615610d21573360009081526016602052604090205460ff16610d1c576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b610d74565b3360009081526013602052604090205460ff16610d74576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000610d8083836124ba565b9050610d8a610e71565b811115610dde576040805162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742072657365727665730000000000000000000000604482015290519081900360640190fd5b602154610deb908261301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2610e2d6001600160a01b038416338461305c565b6040805183815290516001600160a01b038516917f2bb2640731848fe9820ba48dbc978c1fc9bbd5f11b948bfab05b7dee3378fd80919081900360200190a2505050565b6000610f10610f076022547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d6020811015610eff57600080fd5b50519061301a565b6021549061301a565b905090565b3360009081526019602052604090205460ff16610f68576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6040805163079cc67960e41b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916379cc679091604480830192600092919082900301818387803b158015610fd657600080fd5b505af1158015610fea573d6000803e3d6000fd5b5050336000908152601b6020526040902054611009925090508261301a565b336000908152601b6020526040902055602254611026908261301a565b602255604080518281526020810183905281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a350565b60066020526000908152604090205460ff1681565b3360009081526019602052604090205460ff166110fc576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6001600160a01b03811660009081526003602052604090205460ff16611158576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b600061116482846124ba565b601f54604080516370a0823160e01b815233600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156111b557600080fd5b505afa1580156111c9573d6000803e3d6000fd5b505050506040513d60208110156111df57600080fd5b5051336000908152601b60205260408120549192509061120090839061301a565b905080831115611257576040805162461bcd60e51b815260206004820152601260248201527f457863656564732064656274206c696d69740000000000000000000000000000604482015290519081900360640190fd5b336000908152601b602052604090205461127190846130c8565b336000908152601b602052604090205560225461128e90846130c8565b60225560215461129e908461301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a26040805163a9059cbb60e01b81523360048201526024810187905290516001600160a01b0386169163a9059cbb9160448083019260209291908290030181600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d602081101561134557600080fd5b5050604080518681526020810185905281516001600160a01b0387169233927f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6929081900390910190a35050505050565b6011602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314611410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805b6002548110156114e8576114de6114d76002838154811061143157fe5b600091825260209091200154600280546001600160a01b03909216918590811061145757fe5b60009182526020918290200154604080516370a0823160e01b815230600482015290516001600160a01b03909216926370a0823192602480840193829003018186803b1580156114a657600080fd5b505afa1580156114ba573d6000803e3d6000fd5b505050506040513d60208110156114d057600080fd5b50516124ba565b83906130c8565b9150600101611414565b5060005b600b548110156115395761152f6114d7600b838154811061150957fe5b600091825260209091200154600b80546001600160a01b03909216918590811061145757fe5b91506001016114ec565b50602181905560405181907f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a260405181907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60088181548110610bd357600080fd5b6000546001600160a01b0316331461162b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166116705760405162461bcd60e51b81526004018080602001828103825260268152602001806137a66026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b601d6020526000908152604090205460ff1681565b6001546001600160a01b031633146117385760405162461bcd60e51b81526004018080602001828103825260228152602001806137cc6022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60036020526000908152604090205460ff1681565b336000908152601d602052604090205460ff16611801576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b611809610e71565b81111561185d576040805162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742072657365727665730000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118d457600080fd5b505af11580156118e8573d6000803e3d6000fd5b50506040805184815290516001600160a01b03861693503392507ffa8ccab40e7da8146c2304cd0950334fd30a6ba093abe86261aa13911fed849c9181900360200190a35050565b60058181548110610bd357600080fd5b60158181548110610bd357600080fd5b60046020526000908152604090205463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60188181548110610bd357600080fd5b60096020526000908152604090205460ff1681565b600d6020526000908152604090205463ffffffff1681565b600e8181548110610bd357600080fd5b60215481565b60076020526000908152604090205463ffffffff1681565b600f6020526000908152604090205460ff1681565b600c6020526000908152604090205460ff1681565b60176020526000908152604090205463ffffffff1681565b60146020526000908152604090205463ffffffff1681565b601c8181548110610bd357600080fd5b6001600160a01b03821660009081526003602052604081205460ff1680611aa057506001600160a01b0383166000908152600c602052604090205460ff165b611ae0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b611af56001600160a01b038416333087613122565b6001600160a01b03831660009081526003602052604090205460ff1615611b6e573360009081526006602052604090205460ff16611b69576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b611bc1565b336000908152600f602052604090205460ff16611bc1576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000611bcd84866124ba565b9050611bd9818461301a565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1933846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c5257600080fd5b505af1158015611c66573d6000803e3d6000fd5b5050602154611c7892509050826130c8565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a2509392505050565b600a6020526000908152604090205463ffffffff1681565b601a6020526000908152604090205463ffffffff1681565b60028181548110610bd357600080fd5b3360009081526019602052604090205460ff16611d84576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6001600160a01b03811660009081526003602052604090205460ff16611de0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b611df56001600160a01b038216333085613122565b6000611e0182846124ba565b336000908152601b6020526040902054909150611e1e908261301a565b336000908152601b6020526040902055602254611e3b908261301a565b602255602154611e4b90826130c8565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518481526020810183905281516001600160a01b0385169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a3505050565b60166020526000908152604090205460ff1681565b60205481565b600080546001600160a01b03163314611f41576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038216611f5457600080fd5b6000836009811115611f6257fe5b1415611fd157611f9c63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600760205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b6001836009811115611fdf57fe5b141561204e5761201963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600a60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600283600981111561205c57fe5b14156120cb5761209663ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600460205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60038360098111156120d957fe5b141561215c5761212761211763ffffffff7f00000000000000000000000000000000000000000000000000000000000000008116906002906131fa16565b63ffffffff428116919061319716565b6001600160a01b0383166000908152601460205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600483600981111561216a57fe5b14156121d9576121a463ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601060205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60058360098111156121e757fe5b14156122565761222163ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600d60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600683600981111561226457fe5b14156122d7576122a261211763ffffffff7f00000000000000000000000000000000000000000000000000000000000000008116906002906131fa16565b6001600160a01b0383166000908152601760205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60078360098111156122e557fe5b14156123545761231f63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601a60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600883600981111561236257fe5b14156123d15761239c63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601e60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60098360098111156123df57fe5b14156124275761241963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b63ffffffff1660205561242f565b50600061247b565b82600981111561243b57fe5b604080516001600160a01b038516815290517f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9181900360200190a25060015b92915050565b60136020526000908152604090205460ff1681565b60196020526000908152604090205460ff1681565b601f546001600160a01b031681565b6001600160a01b03821660009081526003602052604081205460ff16156125f7576125f0836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561251757600080fd5b505afa15801561252b573d6000803e3d6000fd5b505050506040513d602081101561254157600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a916125ea916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b1580156125b157600080fd5b505afa1580156125c5573d6000803e3d6000fd5b505050506040513d60208110156125db57600080fd5b5051859060ff16600a0a61326b565b906132c4565b905061247b565b6001600160a01b0383166000908152600c602052604090205460ff161561247b576001600160a01b03808416600081815260116020908152604091829020548251634249719f60e01b815260048101949094526024840187905291519190931692634249719f9260448082019391829003018186803b15801561267957600080fd5b505afa15801561268d573d6000803e3d6000fd5b505050506040513d60208110156126a357600080fd5b50519392505050565b601e6020526000908152604090205463ffffffff1681565b600080546001600160a01b03163314612724576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03831661273757600080fd5b60008085600981111561274657fe5b141561280c576127596007600686613306565b156127dc576001600160a01b0384166000908152600760205260409020805463ffffffff1916905561278c60058561341e565b6127dc57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600660205260409020805460ff81161560ff199091168117909155612f8e565b600185600981111561281a57fe5b14156128e05761282d600a600986613306565b156128b0576001600160a01b0384166000908152600a60205260409020805463ffffffff1916905561286060088561341e565b6128b057600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600960205260409020805460ff81161560ff199091168117909155612f8e565b60028560098111156128ee57fe5b14156129b4576129016004600386613306565b15612984576001600160a01b0384166000908152600460205260409020805463ffffffff1916905561293460028561341e565b61298457600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600360205260409020805460ff81161560ff199091168117909155612f8e565b60038560098111156129c257fe5b1415612ac5576129d56014601386613306565b15612a9557601280546001810182557fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0387169081179091556000908152601460205260409020805463ffffffff19169055612a45908561341e565b612a9557601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601360205260409020805460ff81161560ff199091168117909155612f8e565b6004856009811115612ad357fe5b1415612bd657612ae66010600f86613306565b15612ba657600e80546001810182557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0387169081179091556000908152601060205260409020805463ffffffff19169055612b56908561341e565b612ba657600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600f60205260409020805460ff81161560ff199091168117909155612f8e565b6005856009811115612be457fe5b1415612ccc57612bf7600d600c86613306565b15612c7a576001600160a01b0384166000908152600d60205260409020805463ffffffff19169055612c2a600b8561341e565b612c7a57600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b038381166000908152600c60209081526040808320805460ff81161560ff199091168117909155601190925290912080546001600160a01b03191692851692909217909155612f8e565b6006856009811115612cda57fe5b1415612da057612ced6017601686613306565b15612d70576001600160a01b0384166000908152601760205260409020805463ffffffff19169055612d2060158561341e565b612d7057601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601660205260409020805460ff81161560ff199091168117909155612f8e565b6007856009811115612dae57fe5b1415612e7457612dc1601a601986613306565b15612e44576001600160a01b0384166000908152601a60205260409020805463ffffffff19169055612df460188561341e565b612e4457601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601960205260409020805460ff81161560ff199091168117909155612f8e565b6008856009811115612e8257fe5b1415612f4857612e95601e601d86613306565b15612f18576001600160a01b0384166000908152601e60205260409020805463ffffffff19169055612ec8601c8561341e565b612f1857601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601d60205260409020805460ff81161560ff199091168117909155612f8e565b6009856009811115612f5657fe5b1415612f8457506000602055601f80546001600160a01b0319166001600160a01b0385161790556001612f8e565b6000915050612fe5565b846009811115612f9a57fe5b604080516001600160a01b0387168152831515602082015281517f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477929181900390910190a260019150505b9392505050565b60225481565b600b8181548110610bd357600080fd5b60106020526000908152604090205463ffffffff1681565b6000612fe583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061346e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526130c3908490613505565b505050565b600082820183811015612fe5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052613191908590613505565b50505050565b600082820163ffffffff8085169082161015612fe5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600063ffffffff831661320f5750600061247b565b82820263ffffffff808416908086169083168161322857fe5b0463ffffffff1614612fe55760405162461bcd60e51b81526004018080602001828103825260218152602001806137ee6021913960400191505060405180910390fd5b60008261327a5750600061247b565b8282028284828161328757fe5b0414612fe55760405162461bcd60e51b81526004018080602001828103825260218152602001806137ee6021913960400191505060405180910390fd5b6000612fe583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506135b6565b6001600160a01b03811660009081526020839052604081205460ff16613414576001600160a01b03821660009081526020859052604090205463ffffffff16613396576040805162461bcd60e51b815260206004820152600a60248201527f4d75737420717565756500000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821660009081526020859052604090205463ffffffff4281169116111561340c576040805162461bcd60e51b815260206004820152601160248201527f5175657565206e6f742065787069726564000000000000000000000000000000604482015290519081900360640190fd5b506001612fe5565b5060009392505050565b6000805b835481101561341457826001600160a01b031684828154811061344157fe5b6000918252602090912001546001600160a01b0316141561346657600191505061247b565b600101613422565b600081848411156134fd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156134c25781810151838201526020016134aa565b50505050905090810190601f1680156134ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061355a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661361b9092919063ffffffff16565b8051909150156130c35780806020019051602081101561357957600080fd5b50516130c35760405162461bcd60e51b815260040180806020018281038252602a81526020018061380f602a913960400191505060405180910390fd5b600081836136055760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156134c25781810151838201526020016134aa565b50600083858161361157fe5b0495945050505050565b606061362a8484600085613632565b949350505050565b606061363d8561379f565b61368e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106136cd5780518252601f1990920191602091820191016136ae565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461372f576040519150601f19603f3d011682016040523d82523d6000602084013e613734565b606091505b5091509150811561374857915061362a9050565b8051156137585780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156134c25781810151838201526020016134aa565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bde39e4f3a736078ce64beb56d32f88e20a5098a9e0bb8a3186f95e49a61a37c64736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103405760003560e01c80638f59c727116101bd578063d796ffb8116100f9578063f13e7b01116100a2578063fbfd393b1161007c578063fbfd393b14610958578063fc7b9c181461098f578063fd1ec01014610997578063fff9ee87146109b457610340565b8063f13e7b01146108fe578063f182178314610906578063fb9395881461093257610340565b8063e83afee3116100d3578063e83afee314610883578063ebd83cd8146108b2578063ee4e19a1146108d857610340565b8063d796ffb814610829578063df89b34414610855578063e31736031461087b57610340565b8063ab319c9a11610166578063bc157ac111610140578063bc157ac11461078e578063c24ad43e146107c0578063cd85641a146107e6578063d031370b1461080c57610340565b8063ab319c9a14610725578063b1bd38b01461074b578063b5b1d5601461077157610340565b8063932cc8c311610197578063932cc8c3146106b3578063a1210a2d146106d9578063a569e571146106ff57610340565b80638f59c727146106685780638f6a7b571461068e5780638f840ddd146106ab57610340565b8063437f79121161028c5780636a20de9211610235578063788c6c011161020f578063788c6c01146105de5780637a8960d81461061d578063869871bf1461062557806387d67dff1461064257610340565b80636a20de92146105785780636b5e40a7146105a457806370a0502a146105c157610340565b80634e83423c116102665780634e83423c146105245780635a96ac0a1461054a57806368c31dd51461055257610340565b8063437f7912146104d957806346f68ee9146104f6578063481c6a751461051c57610340565b80631162eb10116102ee5780631af4da70116102c85780631af4da70146104a35780632b7ce500146104c95780633c4e6da7146104d157610340565b80631162eb1014610420578063124154ca1461043d57806312422d231461047757610340565b8063094a86511161031f578063094a8651146103b45780630b0eee30146103ec5780630c3513a81461041857610340565b8062f714ce146103455780630619aff114610373578063089208d8146103ac575b600080fd5b6103716004803603604081101561035b57600080fd5b50803590602001356001600160a01b03166109da565b005b6103906004803603602081101561038957600080fd5b5035610bc3565b604080516001600160a01b039092168252519081900360200190f35b610371610bed565b6103da600480360360208110156103ca57600080fd5b50356001600160a01b0316610c96565b60408051918252519081900360200190f35b6103716004803603604081101561040257600080fd5b506001600160a01b038135169060200135610ca8565b6103da610e71565b6103716004803603602081101561043657600080fd5b5035610f15565b6104636004803603602081101561045357600080fd5b50356001600160a01b0316611094565b604080519115158252519081900360200190f35b6103716004803603604081101561048d57600080fd5b50803590602001356001600160a01b03166110a9565b610390600480360360208110156104b957600080fd5b50356001600160a01b0316611396565b6103716113b1565b610390611598565b610390600480360360208110156104ef57600080fd5b50356115bc565b6103716004803603602081101561050c57600080fd5b50356001600160a01b03166115cc565b6103906116cb565b6104636004803603602081101561053a57600080fd5b50356001600160a01b03166116da565b6103716116ef565b6104636004803603602081101561056857600080fd5b50356001600160a01b0316611799565b6103716004803603604081101561058e57600080fd5b506001600160a01b0381351690602001356117ae565b610390600480360360208110156105ba57600080fd5b5035611930565b610390600480360360208110156105d757600080fd5b5035611940565b610604600480360360208110156105f457600080fd5b50356001600160a01b0316611950565b6040805163ffffffff9092168252519081900360200190f35b610604611968565b6103906004803603602081101561063b57600080fd5b503561198c565b6104636004803603602081101561065857600080fd5b50356001600160a01b031661199c565b6106046004803603602081101561067e57600080fd5b50356001600160a01b03166119b1565b610390600480360360208110156106a457600080fd5b50356119c9565b6103da6119d9565b610604600480360360208110156106c957600080fd5b50356001600160a01b03166119df565b610463600480360360208110156106ef57600080fd5b50356001600160a01b03166119f7565b6104636004803603602081101561071557600080fd5b50356001600160a01b0316611a0c565b6106046004803603602081101561073b57600080fd5b50356001600160a01b0316611a21565b6106046004803603602081101561076157600080fd5b50356001600160a01b0316611a39565b6103906004803603602081101561078757600080fd5b5035611a51565b6103da600480360360608110156107a457600080fd5b508035906001600160a01b036020820135169060400135611a61565b610604600480360360208110156107d657600080fd5b50356001600160a01b0316611cf1565b610604600480360360208110156107fc57600080fd5b50356001600160a01b0316611d09565b6103906004803603602081101561082257600080fd5b5035611d21565b6103716004803603604081101561083f57600080fd5b50803590602001356001600160a01b0316611d31565b6104636004803603602081101561086b57600080fd5b50356001600160a01b0316611ec6565b6103da611edb565b6104636004803603604081101561089957600080fd5b50803560ff1690602001356001600160a01b0316611ee1565b610463600480360360208110156108c857600080fd5b50356001600160a01b0316612481565b610463600480360360208110156108ee57600080fd5b50356001600160a01b0316612496565b6103906124ab565b6103da6004803603604081101561091c57600080fd5b506001600160a01b0381351690602001356124ba565b6106046004803603602081101561094857600080fd5b50356001600160a01b03166126ac565b6104636004803603606081101561096e57600080fd5b5060ff813516906001600160a01b03602082013581169160400135166126c4565b6103da612fec565b610390600480360360208110156109ad57600080fd5b5035612ff2565b610604600480360360208110156109ca57600080fd5b50356001600160a01b0316613002565b6001600160a01b03811660009081526003602052604090205460ff16610a36576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b3360009081526009602052604090205460ff161515600114610a8e576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000610a9a82846124ba565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379cc679033836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b5050602154610b39925090508261301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2610b7b6001600160a01b038316338561305c565b604080518481526020810183905281516001600160a01b038516927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb928290030190a2505050565b60128181548110610bd357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c4c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b601b6020526000908152604090205481565b6001600160a01b0382166000908152600c602052604090205460ff1615610d21573360009081526016602052604090205460ff16610d1c576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b610d74565b3360009081526013602052604090205460ff16610d74576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000610d8083836124ba565b9050610d8a610e71565b811115610dde576040805162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742072657365727665730000000000000000000000604482015290519081900360640190fd5b602154610deb908261301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2610e2d6001600160a01b038416338461305c565b6040805183815290516001600160a01b038516917f2bb2640731848fe9820ba48dbc978c1fc9bbd5f11b948bfab05b7dee3378fd80919081900360200190a2505050565b6000610f10610f076022547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d6020811015610eff57600080fd5b50519061301a565b6021549061301a565b905090565b3360009081526019602052604090205460ff16610f68576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6040805163079cc67960e41b81523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916379cc679091604480830192600092919082900301818387803b158015610fd657600080fd5b505af1158015610fea573d6000803e3d6000fd5b5050336000908152601b6020526040902054611009925090508261301a565b336000908152601b6020526040902055602254611026908261301a565b602255604080518281526020810183905281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a350565b60066020526000908152604090205460ff1681565b3360009081526019602052604090205460ff166110fc576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6001600160a01b03811660009081526003602052604090205460ff16611158576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b600061116482846124ba565b601f54604080516370a0823160e01b815233600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156111b557600080fd5b505afa1580156111c9573d6000803e3d6000fd5b505050506040513d60208110156111df57600080fd5b5051336000908152601b60205260408120549192509061120090839061301a565b905080831115611257576040805162461bcd60e51b815260206004820152601260248201527f457863656564732064656274206c696d69740000000000000000000000000000604482015290519081900360640190fd5b336000908152601b602052604090205461127190846130c8565b336000908152601b602052604090205560225461128e90846130c8565b60225560215461129e908461301a565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a26040805163a9059cbb60e01b81523360048201526024810187905290516001600160a01b0386169163a9059cbb9160448083019260209291908290030181600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d602081101561134557600080fd5b5050604080518681526020810185905281516001600160a01b0387169233927f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6929081900390910190a35050505050565b6011602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314611410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805b6002548110156114e8576114de6114d76002838154811061143157fe5b600091825260209091200154600280546001600160a01b03909216918590811061145757fe5b60009182526020918290200154604080516370a0823160e01b815230600482015290516001600160a01b03909216926370a0823192602480840193829003018186803b1580156114a657600080fd5b505afa1580156114ba573d6000803e3d6000fd5b505050506040513d60208110156114d057600080fd5b50516124ba565b83906130c8565b9150600101611414565b5060005b600b548110156115395761152f6114d7600b838154811061150957fe5b600091825260209091200154600b80546001600160a01b03909216918590811061145757fe5b91506001016114ec565b50602181905560405181907f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a260405181907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60088181548110610bd357600080fd5b6000546001600160a01b0316331461162b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166116705760405162461bcd60e51b81526004018080602001828103825260268152602001806137a66026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b601d6020526000908152604090205460ff1681565b6001546001600160a01b031633146117385760405162461bcd60e51b81526004018080602001828103825260228152602001806137cc6022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60036020526000908152604090205460ff1681565b336000908152601d602052604090205460ff16611801576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b611809610e71565b81111561185d576040805162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742072657365727665730000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118d457600080fd5b505af11580156118e8573d6000803e3d6000fd5b50506040805184815290516001600160a01b03861693503392507ffa8ccab40e7da8146c2304cd0950334fd30a6ba093abe86261aa13911fed849c9181900360200190a35050565b60058181548110610bd357600080fd5b60158181548110610bd357600080fd5b60046020526000908152604090205463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60188181548110610bd357600080fd5b60096020526000908152604090205460ff1681565b600d6020526000908152604090205463ffffffff1681565b600e8181548110610bd357600080fd5b60215481565b60076020526000908152604090205463ffffffff1681565b600f6020526000908152604090205460ff1681565b600c6020526000908152604090205460ff1681565b60176020526000908152604090205463ffffffff1681565b60146020526000908152604090205463ffffffff1681565b601c8181548110610bd357600080fd5b6001600160a01b03821660009081526003602052604081205460ff1680611aa057506001600160a01b0383166000908152600c602052604090205460ff165b611ae0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b611af56001600160a01b038416333087613122565b6001600160a01b03831660009081526003602052604090205460ff1615611b6e573360009081526006602052604090205460ff16611b69576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b611bc1565b336000908152600f602052604090205460ff16611bc1576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6000611bcd84866124ba565b9050611bd9818461301a565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1933846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c5257600080fd5b505af1158015611c66573d6000803e3d6000fd5b5050602154611c7892509050826130c8565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a2509392505050565b600a6020526000908152604090205463ffffffff1681565b601a6020526000908152604090205463ffffffff1681565b60028181548110610bd357600080fd5b3360009081526019602052604090205460ff16611d84576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6001600160a01b03811660009081526003602052604090205460ff16611de0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b611df56001600160a01b038216333085613122565b6000611e0182846124ba565b336000908152601b6020526040902054909150611e1e908261301a565b336000908152601b6020526040902055602254611e3b908261301a565b602255602154611e4b90826130c8565b60218190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518481526020810183905281516001600160a01b0385169233927fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309929081900390910190a3505050565b60166020526000908152604090205460ff1681565b60205481565b600080546001600160a01b03163314611f41576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038216611f5457600080fd5b6000836009811115611f6257fe5b1415611fd157611f9c63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600760205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b6001836009811115611fdf57fe5b141561204e5761201963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600a60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600283600981111561205c57fe5b14156120cb5761209663ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600460205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60038360098111156120d957fe5b141561215c5761212761211763ffffffff7f00000000000000000000000000000000000000000000000000000000000000008116906002906131fa16565b63ffffffff428116919061319716565b6001600160a01b0383166000908152601460205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600483600981111561216a57fe5b14156121d9576121a463ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601060205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60058360098111156121e757fe5b14156122565761222163ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152600d60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600683600981111561226457fe5b14156122d7576122a261211763ffffffff7f00000000000000000000000000000000000000000000000000000000000000008116906002906131fa16565b6001600160a01b0383166000908152601760205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60078360098111156122e557fe5b14156123545761231f63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601a60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b600883600981111561236257fe5b14156123d15761239c63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b6001600160a01b0383166000908152601e60205260409020805463ffffffff191663ffffffff9290921691909117905561242f565b60098360098111156123df57fe5b14156124275761241963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061319716565b63ffffffff1660205561242f565b50600061247b565b82600981111561243b57fe5b604080516001600160a01b038516815290517f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9181900360200190a25060015b92915050565b60136020526000908152604090205460ff1681565b60196020526000908152604090205460ff1681565b601f546001600160a01b031681565b6001600160a01b03821660009081526003602052604081205460ff16156125f7576125f0836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561251757600080fd5b505afa15801561252b573d6000803e3d6000fd5b505050506040513d602081101561254157600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a916125ea916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b1580156125b157600080fd5b505afa1580156125c5573d6000803e3d6000fd5b505050506040513d60208110156125db57600080fd5b5051859060ff16600a0a61326b565b906132c4565b905061247b565b6001600160a01b0383166000908152600c602052604090205460ff161561247b576001600160a01b03808416600081815260116020908152604091829020548251634249719f60e01b815260048101949094526024840187905291519190931692634249719f9260448082019391829003018186803b15801561267957600080fd5b505afa15801561268d573d6000803e3d6000fd5b505050506040513d60208110156126a357600080fd5b50519392505050565b601e6020526000908152604090205463ffffffff1681565b600080546001600160a01b03163314612724576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03831661273757600080fd5b60008085600981111561274657fe5b141561280c576127596007600686613306565b156127dc576001600160a01b0384166000908152600760205260409020805463ffffffff1916905561278c60058561341e565b6127dc57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600660205260409020805460ff81161560ff199091168117909155612f8e565b600185600981111561281a57fe5b14156128e05761282d600a600986613306565b156128b0576001600160a01b0384166000908152600a60205260409020805463ffffffff1916905561286060088561341e565b6128b057600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600960205260409020805460ff81161560ff199091168117909155612f8e565b60028560098111156128ee57fe5b14156129b4576129016004600386613306565b15612984576001600160a01b0384166000908152600460205260409020805463ffffffff1916905561293460028561341e565b61298457600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600360205260409020805460ff81161560ff199091168117909155612f8e565b60038560098111156129c257fe5b1415612ac5576129d56014601386613306565b15612a9557601280546001810182557fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0387169081179091556000908152601460205260409020805463ffffffff19169055612a45908561341e565b612a9557601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601360205260409020805460ff81161560ff199091168117909155612f8e565b6004856009811115612ad357fe5b1415612bd657612ae66010600f86613306565b15612ba657600e80546001810182557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0387169081179091556000908152601060205260409020805463ffffffff19169055612b56908561341e565b612ba657600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600f60205260409020805460ff81161560ff199091168117909155612f8e565b6005856009811115612be457fe5b1415612ccc57612bf7600d600c86613306565b15612c7a576001600160a01b0384166000908152600d60205260409020805463ffffffff19169055612c2a600b8561341e565b612c7a57600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b038381166000908152600c60209081526040808320805460ff81161560ff199091168117909155601190925290912080546001600160a01b03191692851692909217909155612f8e565b6006856009811115612cda57fe5b1415612da057612ced6017601686613306565b15612d70576001600160a01b0384166000908152601760205260409020805463ffffffff19169055612d2060158561341e565b612d7057601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601660205260409020805460ff81161560ff199091168117909155612f8e565b6007856009811115612dae57fe5b1415612e7457612dc1601a601986613306565b15612e44576001600160a01b0384166000908152601a60205260409020805463ffffffff19169055612df460188561341e565b612e4457601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601960205260409020805460ff81161560ff199091168117909155612f8e565b6008856009811115612e8257fe5b1415612f4857612e95601e601d86613306565b15612f18576001600160a01b0384166000908152601e60205260409020805463ffffffff19169055612ec8601c8561341e565b612f1857601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601d60205260409020805460ff81161560ff199091168117909155612f8e565b6009856009811115612f5657fe5b1415612f8457506000602055601f80546001600160a01b0319166001600160a01b0385161790556001612f8e565b6000915050612fe5565b846009811115612f9a57fe5b604080516001600160a01b0387168152831515602082015281517f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477929181900390910190a260019150505b9392505050565b60225481565b600b8181548110610bd357600080fd5b60106020526000908152604090205463ffffffff1681565b6000612fe583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061346e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526130c3908490613505565b505050565b600082820183811015612fe5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052613191908590613505565b50505050565b600082820163ffffffff8085169082161015612fe5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600063ffffffff831661320f5750600061247b565b82820263ffffffff808416908086169083168161322857fe5b0463ffffffff1614612fe55760405162461bcd60e51b81526004018080602001828103825260218152602001806137ee6021913960400191505060405180910390fd5b60008261327a5750600061247b565b8282028284828161328757fe5b0414612fe55760405162461bcd60e51b81526004018080602001828103825260218152602001806137ee6021913960400191505060405180910390fd5b6000612fe583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506135b6565b6001600160a01b03811660009081526020839052604081205460ff16613414576001600160a01b03821660009081526020859052604090205463ffffffff16613396576040805162461bcd60e51b815260206004820152600a60248201527f4d75737420717565756500000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03821660009081526020859052604090205463ffffffff4281169116111561340c576040805162461bcd60e51b815260206004820152601160248201527f5175657565206e6f742065787069726564000000000000000000000000000000604482015290519081900360640190fd5b506001612fe5565b5060009392505050565b6000805b835481101561341457826001600160a01b031684828154811061344157fe5b6000918252602090912001546001600160a01b0316141561346657600191505061247b565b600101613422565b600081848411156134fd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156134c25781810151838201526020016134aa565b50505050905090810190601f1680156134ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061355a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661361b9092919063ffffffff16565b8051909150156130c35780806020019051602081101561357957600080fd5b50516130c35760405162461bcd60e51b815260040180806020018281038252602a81526020018061380f602a913960400191505060405180910390fd5b600081836136055760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156134c25781810151838201526020016134aa565b50600083858161361157fe5b0495945050505050565b606061362a8484600085613632565b949350505050565b606061363d8561379f565b61368e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106136cd5780518252601f1990920191602091820191016136ae565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461372f576040519150601f19603f3d011682016040523d82523d6000602084013e613734565b606091505b5091509150811561374857915061362a9050565b8051156137585780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156134c25781810151838201526020016134aa565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bde39e4f3a736078ce64beb56d32f88e20a5098a9e0bb8a3186f95e49a61a37c64736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,address,uint256)": {
        "params": {
          "_amount": "uint",
          "_profit": "uint",
          "_token": "address"
        },
        "returns": {
          "send_": "uint"
        }
      },
      "excessReserves()": {
        "returns": {
          "_0": "uint"
        }
      },
      "incurDebt(uint256,address)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      },
      "manage(address,uint256)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      },
      "queue(uint8,address)": {
        "params": {
          "_address": "address",
          "_managing": "MANAGING"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "repayDebtWithBash(uint256)": {
        "params": {
          "_amount": "uint"
        }
      },
      "repayDebtWithReserve(uint256,address)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      },
      "toggle(uint8,address,address)": {
        "params": {
          "_address": "address",
          "_calculator": "address",
          "_managing": "MANAGING"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "tokenValue(address,uint256)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        },
        "returns": {
          "value_": "uint"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "auditReserves()": {
        "notice": "takes inventory of all tracked assetsalways consolidate to recognized reserves before audit"
      },
      "deposit(uint256,address,uint256)": {
        "notice": "allow approved address to deposit an asset for bash"
      },
      "excessReserves()": {
        "notice": "returns excess reserves not backing tokens"
      },
      "incurDebt(uint256,address)": {
        "notice": "allow approved address to borrow reserves"
      },
      "manage(address,uint256)": {
        "notice": "allow approved address to withdraw assets"
      },
      "mintRewards(address,uint256)": {
        "notice": "send epoch reward to staking contract"
      },
      "queue(uint8,address)": {
        "notice": "queue address to change boolean in mapping"
      },
      "repayDebtWithBash(uint256)": {
        "notice": "allow approved address to repay borrowed reserves with bash"
      },
      "repayDebtWithReserve(uint256,address)": {
        "notice": "allow approved address to repay borrowed reserves with reserves"
      },
      "toggle(uint8,address,address)": {
        "notice": "verify queue then set boolean in mapping"
      },
      "tokenValue(address,uint256)": {
        "notice": "returns BASH valuation of asset"
      },
      "withdraw(uint256,address)": {
        "notice": "allow approved address to burn bash for reserves"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13025,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 13027,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "_newOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 13353,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13357,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isReserveToken",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13361,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveTokenQueue",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13364,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveDepositors",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13368,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isReserveDepositor",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13372,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveDepositorQueue",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13375,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveSpenders",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13379,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isReserveSpender",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13383,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveSpenderQueue",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13386,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "liquidityTokens",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13390,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isLiquidityToken",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13394,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "LiquidityTokenQueue",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13397,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "liquidityDepositors",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13401,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isLiquidityDepositor",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13405,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "LiquidityDepositorQueue",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13409,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "bondCalculator",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 13412,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "reserveManagers",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13416,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isReserveManager",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13420,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "ReserveManagerQueue",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13423,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "liquidityManagers",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13427,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isLiquidityManager",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13431,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "LiquidityManagerQueue",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13434,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "debtors",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13438,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isDebtor",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13442,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "debtorQueue",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13446,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "debtorBalance",
        "offset": 0,
        "slot": "27",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 13449,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "rewardManagers",
        "offset": 0,
        "slot": "28",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 13453,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "isRewardManager",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13457,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "rewardManagerQueue",
        "offset": 0,
        "slot": "30",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 13459,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "sBash",
        "offset": 0,
        "slot": "31",
        "type": "t_address"
      },
      {
        "astId": 13461,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "sBashQueue",
        "offset": 0,
        "slot": "32",
        "type": "t_uint256"
      },
      {
        "astId": 13463,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "totalReserves",
        "offset": 0,
        "slot": "33",
        "type": "t_uint256"
      },
      {
        "astId": 13465,
        "contract": "contracts/Treasury.sol:BashTreasury",
        "label": "totalDebt",
        "offset": 0,
        "slot": "34",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}